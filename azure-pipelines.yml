# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Default
  timeoutInMinutes: 120

  pool:
    vmImage: 'win1803'

  steps:
  - script: |
      if %AWS_ACCESS_KEY_ID% == "" (
        choco install awscli
        for /F "usebackq delims=" %%i in (`aws ecr get-login`) do (
          if errorlevel 1 exit /b 1
          set DOCKER_LOGIN_COMMAND=%%i
        )
      )
      if %AWS_ACCESS_KEY_ID% == "" (
        set DOCKER_LOGIN_COMMAND=%DOCKER_LOGIN_COMMAND:-e none =%
      )
      if %AWS_ACCESS_KEY_ID% == "" (
        %DOCKER_LOGIN_COMMAND%
      )
      if errorlevel 1 exit /b 1
      docker build . --file Dockerfile -m 4GB --isolation="process" --tag 308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-windows-vs2017-win1803:v1.0.0
      if errorlevel 1 exit /b 1
      if not "%DOCKER_PASSWORD%" == "" docker push 308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-windows-vs2017-win1803:v1.0.0
      if errorlevel 1 exit /b 1
    displayName: 'Build & Publish the Docker image'
    env:
      AWS_ACCESS_KEY_ID: $(aws_accesskey)
      AWS_SECRET_ACCESS_KEY: $(aws_secret)
      AWS_DEFAULT_REGION: $(aws_region)
